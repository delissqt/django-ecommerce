"""
Django settings for trydjango project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#todo NOTES: python/django find where the project is allocated
#todo NOTES: C:\Users\Forest\Desktop\Proyectos\ProyectosInternos\django-full\src
print(f'BASE_DIR: {BASE_DIR}')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w_qo$h$y5h25(szr!a3s3xpf7woq1_+higz1%kzh-slg(5c)=g'
#todo NOTES: Every Django project has a secret key that´s assoiated to it. They´re always unique to that project.
# Or at leastthey sholud be unique to that project. No public it to production it could possibility lead to security leaks

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#todo NOTES: True = in case is project in develop; False = project is in production

ALLOWED_HOSTS = []
#todo NOTES: domain name

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #own
    'products',
    'pages',
]
#todo NOTES INSTALED_APPS: This is a cornerstone. By default there´s a bunch of them installed by default

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
#todo NOTES MIDDLEWARE: all about requests, how request are handled, how security´s handle and stuff like that

ROOT_URLCONF = 'trydjango.urls'
#todo NOTES ROOT_URLCONF: This is how django knows how to route any given URL

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
#todo NOTES TEMPLATES: like Django renders out HTML templates

WSGI_APPLICATION = 'trydjango.wsgi.application'
#todo NOTES WSGI_APPLICATION: this is how the server works.


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
#todo NOTES: Django maps to databases. MySQL, PostgreSQL and so on. Just change your backend here, where it´s located
# and some other settings, you can go in the docs to see all of that. By default it has a SQLite dtabase already there


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
#todo NOTES AUTH_PASSWORD_VALIDATORS: just validate that passwords are good

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
#todo NOTES STATIC_URL: where is dtored images, javascript, css,


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
